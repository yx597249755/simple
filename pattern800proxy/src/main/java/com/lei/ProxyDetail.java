package com.lei;

public class ProxyDetail {
    /**
     * 代理模式，注重对对象某一功能的流程把控和辅助。它可以控制对象做某些事，重心是为了借用对象的功能完成某一流程，而非对象功能如何。
     * 装饰模式，注重对对象功能的扩展，它不关心外界如何调用，只注重对对象功能的加强，装饰后还是对象本身。
     * 对于代理类，如何调用对象的某一功能是思考重点，而不需要兼顾对象的所有功能；
     * 对于装饰类，如何扩展对象的某一功能是思考重点，同时也需要兼顾对象的其它功能，因为再怎么装饰，本质也是对象本身，要担负起对象应有的职责。
     *

     */


    /**
     * 代理模式（Proxy 模式）可理解为：我想做，但不能做，我需要有一个能干的人来帮我做。
     *
     * 装饰器模式（Decorator 模式）可理解为：我想做，但不能做，我需要有各类特长的人来帮我做，但我有时只需要一个人，有时又需要很多人。
     *
     * 它们的区别就是，Proxy 模式需要的是一个能人，而 Decorator 模式需要的是一个团队。
     * ---------------------
     * 作者：东东咚咚咚咚咚丶
     * 来源：CSDN
     * 原文：https://blog.csdn.net/andong154564667/article/details/80258061
     * 版权声明：本文为博主原创文章，转载请附上博文链接！
     *
     */
}
